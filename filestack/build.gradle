apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

group = 'com.filestack'
version = '5.6.8'
project.archivesBaseName = 'fieldwire-filestack-android'

android {
    compileSdk 34

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 34

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        vectorDrawables {
            useSupportLibrary true
        }

        resourcePrefix 'filestack__'
        buildConfigField "String", "FILESTACK_ANDROID_VERSION", "\"$version\""

    }
    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFile 'consumer-proguard-rules.pro'
        }
    }
    namespace 'com.filestack.android'
}

dependencies {
    api 'com.github.filestack:filestack-java:0.9.0'

    implementation 'androidx.appcompat:appcompat:1.2.0'

    implementation 'androidx.browser:browser:1.3.0'
    // glide 
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.13.1'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}


tasks.register('sourcesJar', Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

tasks.register('javadoc', Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    options.addStringOption('Xdoclint:none', '-quiet')
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../docs/")
}

// Add dependencies to javadoc classpath so annotations work
afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompiler.classpath.files
    })
}

tasks.register('javadocJar', Jar) {
    dependsOn javadoc
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}